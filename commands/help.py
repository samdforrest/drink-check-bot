# Help command implementation
import discord
from discord.ext import commands
from discord import app_commands
import logging

# Set up logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class HelpCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="help", description="View all available drink check bot commands")
    async def help(self, interaction: discord.Interaction):
        """Display help information for all non-admin commands"""
        try:
            embed = discord.Embed(
                title="üç∫ Drink Check Bot Commands",
                description="Here are all the available commands you can use!",
                color=discord.Color.blue()
            )

            # Profile Command
            embed.add_field(
                name="/profile [user]",
                value="View your drink check profile or another user's profile. Shows:\n"
                "‚Ä¢ üç∫ Total drink check credits\n"
                "‚Ä¢ üìù Initial drink checks started\n"
                "‚Ä¢ ‚õìÔ∏è Chain participations\n"
                "‚Ä¢ üìÖ Today's and yesterday's drink checks\n"
                "‚Ä¢ üèÜ Most active day stats\n"
                "‚Ä¢ Longest chain streak",
                inline=False
            )

            # Leaderboard Command
            embed.add_field(
                name="/leaderboard",
                value="View the drink check leaderboard featuring:\n"
                "‚Ä¢ Top 10 users by total drink checks\n"
                "‚Ä¢ üèÖ Server record chain with initiator",
                inline=False
            )

            # Timer Command
            embed.add_field(
                name="/timer",
                value="Check the status of the current drink check chain:\n"
                "‚Ä¢ Time remaining in the current chain\n"
                "‚Ä¢ Who started the chain\n"
                "‚Ä¢ Last person to participate\n"
                "‚Ä¢ Chain starts expire after 30 minutes of inactivity",
                inline=False
            )

            # How to Start a Chain
            embed.add_field(
                name="Starting a Chain",
                value="To start or join a drink check chain:\n"
                "‚Ä¢ Type 'drink check' in any tracked channel\n"
                "‚Ä¢ Chains last for 30 minutes after the last drink check\n"
                "‚Ä¢ Anyone can join an active chain by saying 'drink check'\n"
                "‚Ä¢ Replying to your own active chain will not reset the timer",
                inline=False
            )

            await interaction.response.send_message(embed=embed)

        except Exception as e:
            logger.error(f"Error in help command: {e}")
            await interaction.response.send_message("Error displaying help information.", ephemeral=True)
            raise

async def setup(bot):
    await bot.add_cog(HelpCommands(bot)) 